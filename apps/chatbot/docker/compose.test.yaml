services:
  api-test:
    build:
      context: ..
      dockerfile: docker/app.test.Dockerfile
    command: "./scripts/run.test.sh"
    env_file: "../.env.test"
    ports:
      - "8080:8080"
    volumes:
      - ..:/app
      - ./files/.aws:/root/.aws
      - ./files/nextjs-website/out:/app/build-devp/out
    depends_on:
      redis:
        condition: service_started
      dynamodb:
        condition: service_started
    networks:
      - ntw
  
  dynamodb:
    image: amazon/dynamodb-local:2.5.2
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=local
    ports:
      - "8000:18000"
    healthcheck:
      test: ["CMD-SHELL", '[ "$(curl -s -o /dev/null -I -w ''%{http_code}'' http://localhost:8000)" == "400" ]']
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - ntw
  
  dynamodb-setup:
    image: amazon/aws-cli
    volumes:
      - "./files/dynamodb_schemas:/tmp/dynamo"
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=local
    entrypoint:
      - bash
    command:
      '-c "for f in /tmp/dynamo/*.json; do aws dynamodb create-table --endpoint-url "http://dynamodb-local:8000" --cli-input-json file://"$${f#./}"; done"'
    depends_on:
      dynamodb:
        condition: service_healthy
    networks:
      - ntw

  redis:
    image: redis/redis-stack:7.2.0-v13
    ports:
      - "6379:16379"
    networks:
      - ntw

networks:
  ntw:

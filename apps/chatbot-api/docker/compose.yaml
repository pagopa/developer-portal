---
services:
  api:
    build:
      context: ..
      dockerfile: docker/app.local.Dockerfile
    command: "./scripts/run.local.sh"
    env_file: ../.env.local
    ports:
      - "8080:8080"
    volumes:
      - ..:/app
      - ./files/.aws:/root/.aws
    depends_on:
      redis:
        condition: service_started
      dynamodb:
        condition: service_started
      langfuse:
        condition: service_started
      motoserver:
        condition: service_started
      core:
        condition: service_started
    networks:
      - ntw

  core:
    image: chatbot-core-main:0.1
    env_file: ../.env.local
    environment:
      - PYTHONPATH=/var/task
    ports:
      - "8081:8080"
    volumes:
      - ~/.aws-lambda-rie/aws-lambda-rie:/usr/local/bin/aws-lambda-rie
    entrypoint: ["/usr/local/bin/aws-lambda-rie", "python3"]
    command: ["-m", "awslambdaric", "src.lambdas.main.lambda_handler"]
    networks:
      - ntw

  core-create-index:
    image: chatbot-core-create_vector_index:0.1
    env_file: ../.env.local
    environment:
      - PYTHONPATH=/var/task
    volumes:
      - ./files/nextjs-website/out:/app/build-devp/out
    ports:
      - "8082:8080"
    depends_on:
      redis:
        condition: service_started
      langfuse:
        condition: service_started
      motoserver:
        condition: service_started
    networks:
      - ntw

  postgres:
    image: postgres:17.2-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: ../.env.local
    networks:
      - ntw

  dynamodb:
    image: amazon/dynamodb-local:2.5.2
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=local
    networks:
      - ntw

  redis:
    image: redis/redis-stack:7.2.0-v13
    # ports:
    #   - "6379:6379"
    #   - "8001:8001"
    volumes:
      - redis_data:/data
    networks:
      - ntw

  langfuse:
    image: langfuse/langfuse:2
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "4001:3000"
    env_file: ../.env.local
    networks:
      - ntw

  jupyter:
    build:
      context: ..
      dockerfile: docker/app.local.Dockerfile
    ports:
      - 8888:8888
    env_file: ../.env.local
    depends_on:
      redis:
        condition: service_started
      langfuse:
        condition: service_started
    command: jupyter-lab --no-browser --allow-root --ip=0.0.0.0
    networks:
      - ntw

  motoserver:
    image: motoserver/moto:5.1.0
    networks:
      - ntw

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ntw:

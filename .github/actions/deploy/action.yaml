name: deploy
description: Deploy on AWS S3 Bucket

inputs:
  environment:
    description: 'The environment target'
    required: true
  path_to_gitbook_docs:
    description: 'The absolute path to GitBook content'
    required: true
  cookie_domain_script:
    description: 'The data-domain-script code needed by cookie script from One Trust'
    required: false
  allow_crawler:
    description: 'Allow crawler to index the website, by default are not allowed'
    required: false
  iam_role:
    description: 'The IAM Role to use to perform the deploy'
    required: true
  bucket:
    description: "The AWS S3 Bucket's name selected as destination"
    required: true
  cloudfront_distribution_id:
    description: 'The ID of the Cloudfront distribution to invalidate'
    required: true
  aws_region:
    description: 'The AWS region selected'
    required: false
    default: 'eu-south-1'
  cognito_user_pool_id:
    description: 'The id of the User Pool on Cognito, needed for the authentication'
    required: true
  cognito_identity_pool_id:
    description: 'The id of the Identity Pool on Cognito, needed for the authorization'
    required: true
  cognito_app_client_id:
    description: 'The App Client registered on Cognito'
    required: true
  webinar_question_lifetime_in_seconds:
    description: 'The lifetime of each question expressed in seconds'
    required: true
  strapi_endpoint:
    description: 'The endpoint to invoke to fetch data from Strapi'
    required: true
  strapi_api_token:
    description: 'The API key to use to invoke Strapi endpoint'
    required: true
  fetch_from_strapi:
    description: 'If true, then fetch content from Strapi; otherwise, use only static contents'
    required: false
    default: 'false'
  chatbot_active:
    description: 'If true, then the chatbot is visible; otherwise, the chatbot is hidden'
    required: false
    default: 'false'
  chatbot_host:
    description: 'The host of the chatbot'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

    - name: Setup Node.JS
      uses: ./.github/actions/setup-node

    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Compile packages
      shell: bash
      run: npm run compile

    - name: Download GitBook docs
      uses: actions/checkout@v4
      with:
        repository: pagopa/devportal-docs
        ref: docs/from-gitbook
        path: apps/nextjs-website/checkout_path
        fetch-depth: 1
    
    - name: Update docs folder
      shell: bash
      run: npm run update-docs-ci -w nextjs-website

    - name: Build static website
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        NEXT_PUBLIC_ENVIRONMENT: ${{ inputs.environment }}
        PATH_TO_GITBOOK_DOCS: ${{ inputs.path_to_gitbook_docs }}
        NEXT_PUBLIC_COOKIE_DOMAIN_SCRIPT: ${{ inputs.cookie_domain_script }}
        ALLOW_CRAWLER: ${{ inputs.allow_crawler }}
        NEXT_TELEMETRY_DISABLED: "1"
        NEXT_PUBLIC_COGNITO_REGION: ${{ inputs.aws_region }}
        NEXT_PUBLIC_COGNITO_USER_POOL_WEB_CLIENT_ID: ${{ inputs.cognito_app_client_id }}
        NEXT_PUBLIC_COGNITO_USER_POOL_ID: ${{ inputs.cognito_user_pool_id }}
        NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID: ${{ inputs.cognito_identity_pool_id }}
        NEXT_PUBLIC_CHATBOT_HOST: ${{ inputs.chatbot_host }}
        NEXT_PUBLIC_WEBSITE_NAME: ${{ inputs.website_name }}
        NEXT_PUBLIC_ORGANIZATION_NAME: ${{ inputs.organization_name }}
        NEXT_PUBLIC_ORGANIZATION_LOGO: ${{ inputs.organization_logo }}
        NEXT_PUBLIC_ORGANIZATION_SOCIAL_LINKS: ${{ inputs.organization_social_links }}
        NEXT_PUBLIC_CHATBOT_ACTIVE: ${{ inputs.chatbot_active }}
        STRAPI_ENDPOINT: ${{ inputs.strapi_endpoint }}
        STRAPI_API_TOKEN: ${{ inputs.strapi_api_token }}
        FETCH_FROM_STRAPI: ${{ inputs.fetch_from_strapi }}
      shell: bash
      run: npm run build -w nextjs-website

    - name: Configure AWS Credentials
      uses: ./.github/actions/configure-aws-credentials
      with:
        aws_region: ${{ inputs.aws_region }}
        role_to_assume: ${{ inputs.iam_role }}

    - name: Deploy to S3 Bucket with parallel sync commands
      shell: bash
      env:
        OUT_DIR: ./apps/nextjs-website/out
        S3_BUCKET: s3://${{ inputs.bucket }}
      run: |
        # Sync files in the root of the out directory
        aws s3 sync "$OUT_DIR" "$S3_BUCKET" --exclude "*/*" --delete --only-show-errors
        # Sync subdirectories in the out directory
        for subdir in "$OUT_DIR"/*/; do
          if [ -d "$subdir" ]; then
            subdir_name=$(basename "$subdir")
            aws s3 sync "$subdir" "$S3_BUCKET/$subdir_name" --delete --only-show-errors &
          fi
        done
        # Wait for all sync operations to complete
        wait

    - name: Create AWS Cloudfront Invalidation
      shell: bash
      run: aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront_distribution_id }} --paths "/*" # At the moment we invalidate all the paths

name: Build NextJS website
description: Build NextJS website

inputs:
  environment:
    description: 'The target environment'
    default: 'dev'
    required: false
  path_to_gitbook_docs:
    description: 'The absolute path to GitBook content'
    required: true
  cookie_domain_script:
    description: 'The data-domain-script code needed by cookie script from One Trust'
    required: false
  allow_crawler:
    description: 'Allow crawler to index the website, by default are not allowed'
    required: false
  cognito_user_pool_id:
    description: 'The id of the User Pool on Cognito, needed for the authentication'
    required: true
  cognito_identity_pool_id:
    description: 'The id of the Identity Pool on Cognito, needed for the authorization'
    required: true
  cognito_app_client_id:
    description: 'The App Client registered on Cognito'
    required: true
  cognito_aws_region:
    description: 'The region where Cognito has been deployed. Default set to Milan region'
    required: false
    default: 'eu-south-1'
  webinar_question_lifetime_in_seconds:
    description: 'The lifetime of each question expressed in seconds'
    required: true
  strapi_endpoint:
    description: 'The endpoint to invoke to fetch data from Strapi'
    required: true
  strapi_api_token:
    description: 'The API key to use to invoke Strapi endpoint'
    required: true
  fetch_from_strapi:
    description: 'If true, then fetch content from Strapi; otherwise, use only static contents'
    required: false
    default: 'false'


runs:
  using: "composite"
  steps:
    - name: Download GitBook docs
      uses: actions/checkout@v4
      with:
        repository: pagopa/devportal-docs
        ref: docs/from-gitbook
        path: apps/nextjs-website/checkout_path
        fetch-depth: 1
    
    - name: Update docs folder
      shell: bash
      run: npm run update-docs-ci -w nextjs-website

    - name: Restore NextJS cache
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      with:
        path: ${{ github.workspace }}/apps/nextjs-website/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Build static website
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        NEXT_PUBLIC_ENVIRONMENT: ${{ inputs.environment }}
        PATH_TO_GITBOOK_DOCS: ${{ inputs.path_to_gitbook_docs }}
        NEXT_PUBLIC_COOKIE_DOMAIN_SCRIPT: ${{ inputs.cookie_domain_script }}
        ALLOW_CRAWLER: ${{ inputs.allow_crawler }}
        NEXT_TELEMETRY_DISABLED: '1'
        NEXT_PUBLIC_COGNITO_USER_POOL_WEB_CLIENT_ID: ${{ inputs.cognito_app_client_id }}
        NEXT_PUBLIC_COGNITO_REGION: ${{ inputs.cognito_aws_region }}
        NEXT_PUBLIC_COGNITO_USER_POOL_ID: ${{ inputs.cognito_user_pool_id }}
        NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID: ${{ inputs.cognito_identity_pool_id }}
        STRAPI_ENDPOINT: ${{ inputs.strapi_endpoint }}
        STRAPI_API_TOKEN: ${{ inputs.strapi_api_token }}
        FETCH_FROM_STRAPI: ${{ inputs.fetch_from_strapi }}
      shell: bash
      run: npm run build -w nextjs-website

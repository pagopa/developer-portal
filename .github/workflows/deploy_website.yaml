name: Deploy Website

on:
  pull_request:
    types:
      - closed # Trigger when the PR is closed
    branches:
      - 'main' # Target branch is main
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment used as target'
        type: choice
        required: true
        default: dev
        options:
          - dev
          - prod
      tag:
        description: 'The tag to deploy'
        type: string
        required: true

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook

  # Runs at 2 a.m. UTC every day
  schedule:
    - cron: '0 2 * * *'

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:

  cd_deploy:
    name: Deploy to S3 (on ${{ matrix.environment }})
    # Trigger when the PR is merged or on a webhook (e.g. trigger deploy from CMS)
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'repository_dispatch'
    runs-on: codebuild-${{ matrix.environment }}-github-runner-${{ github.run_id }}-${{ github.run_attempt }}
    strategy:
      matrix:
        environment: [ 'dev' ]
      fail-fast: false # Do not cancel any other jobs in the matrix, if a single job fails

    environment: ${{ matrix.environment }}
    
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      
      - name: Increase action disk space
        uses: ./.github/actions/increase-disk-space

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ matrix.environment }}
          path_to_gitbook_docs: ${{ github.workspace }}/apps/nextjs-website/docs
          cookie_domain_script: ${{ secrets.COOKIE_DOMAIN_SCRIPT }}
          allow_crawler: ${{ vars.ALLOW_CRAWLER }}
          iam_role: ${{ secrets.DEPLOY_IAM_ROLE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
          cognito_user_pool_id: ${{ secrets.NEXT_PUBLIC_COGNITO_USER_POOL_ID }}
          cognito_identity_pool_id: ${{ secrets.NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID }}
          cognito_app_client_id: ${{ secrets.NEXT_PUBLIC_COGNITO_USER_POOL_WEB_CLIENT_ID }}
          chatbot_host: ${{ vars.NEXT_PUBLIC_CHATBOT_HOST }}
          chat_max_history_messages: ${{ vars.NEXT_PUBLIC_CHAT_MAX_HISTORY_MESSAGES }}
          website_name: ${{ vars.NEXT_PUBLIC_WEBSITE_NAME }}
          organization_name: ${{ vars.NEXT_PUBLIC_ORGANIZATION_NAME }}
          organization_logo: ${{ vars.NEXT_PUBLIC_ORGANIZATION_LOGO }}
          organization_social_links: ${{ vars.NEXT_PUBLIC_ORGANIZATION_SOCIAL_LINKS }}
          chatbot_active: ${{ vars.NEXT_PUBLIC_CHATBOT_ACTIVE }}
          strapi_endpoint: ${{ vars.STRAPI_ENDPOINT }}
          strapi_api_token: ${{ secrets.STRAPI_API_TOKEN }}
          fetch_from_strapi: ${{ vars.FETCH_FROM_STRAPI }}
          webinar_question_lifetime_in_seconds: 259200

  manual_deploy:
    name: Deploy to S3 (manual on ${{ inputs.environment }})
    if: github.event_name == 'workflow_dispatch'
    runs-on: codebuild-${{ inputs.environment }}-github-runner-${{ github.run_id }}-${{ github.run_attempt }}
    environment: ${{ inputs.environment }}

    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ inputs.tag }}

      - name: Increase action disk space
        uses: ./.github/actions/increase-disk-space

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ inputs.environment }}
          path_to_gitbook_docs: ${{ github.workspace }}/apps/nextjs-website/docs
          cookie_domain_script: ${{ secrets.COOKIE_DOMAIN_SCRIPT }}
          allow_crawler: ${{ vars.ALLOW_CRAWLER }}
          iam_role: ${{ secrets.DEPLOY_IAM_ROLE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
          cognito_user_pool_id: ${{ secrets.NEXT_PUBLIC_COGNITO_USER_POOL_ID }}
          cognito_identity_pool_id: ${{ secrets.NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID }}
          cognito_app_client_id: ${{ secrets.NEXT_PUBLIC_COGNITO_USER_POOL_WEB_CLIENT_ID }}
          chatbot_host: ${{ vars.NEXT_PUBLIC_CHATBOT_HOST }}
          chat_max_history_messages: ${{ vars.NEXT_PUBLIC_CHAT_MAX_HISTORY_MESSAGES }}
          website_name: ${{ vars.NEXT_PUBLIC_WEBSITE_NAME }}
          organization_name: ${{ vars.NEXT_PUBLIC_ORGANIZATION_NAME }}
          organization_logo: ${{ vars.NEXT_PUBLIC_ORGANIZATION_LOGO }}
          organization_social_links: ${{ vars.NEXT_PUBLIC_ORGANIZATION_SOCIAL_LINKS }}
          chatbot_active: ${{ vars.NEXT_PUBLIC_CHATBOT_ACTIVE }}
          strapi_endpoint: ${{ vars.STRAPI_ENDPOINT }}
          strapi_api_token: ${{ secrets.STRAPI_API_TOKEN }}
          fetch_from_strapi: ${{ vars.FETCH_FROM_STRAPI }}
          webinar_question_lifetime_in_seconds: 259200

      - name: Move ${{ vars.LAST_DEPLOYED_TAG }} tag to the commit just deployed
        shell: bash
        env:
          TAG: ${{ inputs.tag }}
        run: |
          # Get commit hash associated with the input tag
          COMMIT_HASH=$(git rev-list -n 1 ${{ inputs.tag }})
          # Set up Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Get package name
          PACKAGE_NAME=$(echo $GITHUB_REF_NAME | cut -d'@' -f1)
          git tag -f $PACKAGE_NAME@${{ vars.LAST_DEPLOYED_TAG }} ${{ COMMIT_HASH }}
          # TODO: Check next line
          git push --tags --force
          # Some remote repositories (e.g., GitHub) may not update tags automatically.
          # To ensure consistency, delete the old remote tag before pushing the new one:
          git push --delete origin ${{ vars.LAST_DEPLOYED_TAG }}
          # Then, push the new tag again:
          git push origin ${{ vars.LAST_DEPLOYED_TAG }}

  scheduled_deploy:
    name: Scheduled Deploy to S3
    if: github.event_name == 'schedule'
    runs-on: codebuild-prod-github-runner-${{ github.run_id }}-${{ github.run_attempt }}
    environment: prod

    concurrency:
      group: ${{ github.workflow }}-scheduled
      cancel-in-progress: false

    steps:
      - name: Checkout specific tag
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: 'currently_in_production'

      - name: Increase action disk space
        uses: ./.github/actions/increase-disk-space

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ matrix.environment }}
          path_to_gitbook_docs: ${{ github.workspace }}/apps/nextjs-website/docs
          cookie_domain_script: ${{ secrets.COOKIE_DOMAIN_SCRIPT }}
          allow_crawler: ${{ vars.ALLOW_CRAWLER }}
          iam_role: ${{ secrets.DEPLOY_IAM_ROLE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
          cognito_user_pool_id: ${{ secrets.NEXT_PUBLIC_COGNITO_USER_POOL_ID }}
          cognito_identity_pool_id: ${{ secrets.NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID }}
          cognito_app_client_id: ${{ secrets.NEXT_PUBLIC_COGNITO_USER_POOL_WEB_CLIENT_ID }}
          chatbot_host: ${{ vars.NEXT_PUBLIC_CHATBOT_HOST }}
          chat_max_history_messages: ${{ vars.NEXT_PUBLIC_CHAT_MAX_HISTORY_MESSAGES }}
          website_name: ${{ vars.NEXT_PUBLIC_WEBSITE_NAME }}
          organization_name: ${{ vars.NEXT_PUBLIC_ORGANIZATION_NAME }}
          organization_logo: ${{ vars.NEXT_PUBLIC_ORGANIZATION_LOGO }}
          organization_social_links: ${{ vars.NEXT_PUBLIC_ORGANIZATION_SOCIAL_LINKS }}
          chatbot_active: ${{ vars.NEXT_PUBLIC_CHATBOT_ACTIVE }}
          strapi_endpoint: ${{ vars.STRAPI_ENDPOINT }}
          strapi_api_token: ${{ secrets.STRAPI_API_TOKEN }}
          fetch_from_strapi: ${{ vars.FETCH_FROM_STRAPI }}
          webinar_question_lifetime_in_seconds: 259200

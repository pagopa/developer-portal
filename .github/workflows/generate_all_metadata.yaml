name: Generate All Metadata

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment used as target'
        type: choice
        required: true
        default: dev
        options:
          - dev
          - prod
      metadata_type:
        description: 'Type of metadata to generate'
        type: choice
        required: true
        default: all
        options:
          - all
          - guides
          - solutions
          - release_notes
  push:
    branches:
      - DEV-2158-pipelines

# These permissions are needed to interact with GitHub's OIDC Token endpoint
permissions:
  id-token: write
  contents: read

jobs:
  generate_metadata:
    name: Generate Metadata
    runs-on: ubuntu-latest
    # Use dev environment for automatic runs from pushes
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.JS
        uses: ./.github/actions/setup-node

      - name: Install dependencies
        run: npm ci

      - name: Compile packages
        run: npm run compile

      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws_region: eu-south-1
          role_to_assume: ${{ secrets.DEPLOY_IAM_ROLE }}

      - name: Generate guides metadata
        # For push events, run all metadata types
        if: github.event_name == 'push' || inputs.metadata_type == 'guides' || inputs.metadata_type == 'all'
        env:
          ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          S3_DOC_EXTRACTION_BUCKET_NAME: ${{ vars.S3_DOC_EXTRACTION_BUCKET_NAME }}
          S3_PATH_TO_GITBOOK_DOCS: ${{ vars.S3_PATH_TO_GITBOOK_DOCS || 'docs' }}
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          STRAPI_ENDPOINT: ${{ vars.STRAPI_ENDPOINT }}
          STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}
          FETCH_FROM_STRAPI: ${{ vars.FETCH_FROM_STRAPI || 'true' }}
          NEXT_PUBLIC_COGNITO_REGION: ${{ vars.NEXT_PUBLIC_COGNITO_REGION || 'eu-south-1' }}
        run: npm run generate-guides-metadata -w gitbook-docs
        
      - name: Generate solutions metadata
        # For push events, run all metadata types
        if: github.event_name == 'push' || inputs.metadata_type == 'solutions' || inputs.metadata_type == 'all'
        env:
          ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          S3_DOC_EXTRACTION_BUCKET_NAME: ${{ vars.S3_DOC_EXTRACTION_BUCKET_NAME }}
          S3_PATH_TO_GITBOOK_DOCS: ${{ vars.S3_PATH_TO_GITBOOK_DOCS || 'docs' }}
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          STRAPI_ENDPOINT: ${{ vars.STRAPI_ENDPOINT }}
          STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}
          FETCH_FROM_STRAPI: ${{ vars.FETCH_FROM_STRAPI || 'true' }}
          NEXT_PUBLIC_COGNITO_REGION: ${{ vars.NEXT_PUBLIC_COGNITO_REGION || 'eu-south-1' }}
        run: npm run generate-solutions-metadata -w gitbook-docs
        
      - name: Generate release notes metadata
        # For push events, run all metadata types
        if: github.event_name == 'push' || inputs.metadata_type == 'release_notes' || inputs.metadata_type == 'all'
        env:
          ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          S3_DOC_EXTRACTION_BUCKET_NAME: ${{ vars.S3_DOC_EXTRACTION_BUCKET_NAME }}
          S3_PATH_TO_GITBOOK_DOCS: ${{ vars.S3_PATH_TO_GITBOOK_DOCS || 'docs' }}
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          STRAPI_ENDPOINT: ${{ vars.STRAPI_ENDPOINT }}
          STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}
          FETCH_FROM_STRAPI: ${{ vars.FETCH_FROM_STRAPI || 'true' }}
          NEXT_PUBLIC_COGNITO_REGION: ${{ vars.NEXT_PUBLIC_COGNITO_REGION || 'eu-south-1' }}
        run: npm run generate-release-notes-metadata -w gitbook-docs 